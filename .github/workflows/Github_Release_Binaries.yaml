# This is a basic workflow to help you get started with Actions

name: Generate_Github_Release_Binaries

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.x
          include-prerelease: true
       
         
      - name: Publish Release Binaries
        run: |
          #delete both binaries before regenerating them otherwise git won't detect a change
          rm ${{github.workspace}}/release_binaries/*
          
          #Commit a change for the deleted binaries
          git config --local user.name "APIOPS"
          git add ./release_binaries
          git commit -m "Deleted the binaries from the release_binaries folder"     
     
          
          #generate the extractor binary
          cd tools/code/extractor/
          dotnet publish ./extractor.csproj --self-contained --runtime linux-x64 -p:PublishSingleFile=true -o extractor
          cd extractor
          cp extractor ${{github.workspace}}/release_binaries
          
          #go back to the root of the workspacec
          cd ${{github.workspace}}

          #generate the publisher binary
          cd tools/code/publisher/
          dotnet publish ./publisher.csproj --self-contained --runtime linux-x64 -p:PublishSingleFile=true -o publisher
          cd publisher
          cp publisher ${{github.workspace}}/release_binaries
         
      - name: Commit newly created binaries
        run: |
          git config --local user.name "APIOPS"
          git add ./release_binaries
          git commit -m "Pushed the latest binaries to the release_binaries folder"

      - name: Push changes back the repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          
      - name: Release
        uses: softprops/action-gh-release@v1
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            configuration.extractor.yaml
          name: 'v1.0.0'
          tag_name: 'v1.0.0'
          
          
