# This is a basic workflow to help you get started with Actions

name: Deploy to NuGet

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PROJECT_PATH: 'tools/code/extractor/extractor.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.x
          include-prerelease: true

      - name: 'Restore packages'
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: 'Build project'
        run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release --self-contained --runtime linux-x64
      
      #- name: build binary
      #  run: |
      #    cd tools/code/extractor/
      #    dotnet publish ./extractor.csproj --self-contained --runtime linux-x64 -p:PublishSingleFile=true -o extractor
      
      - name: 'Pack project'
        run: | 
          cd tools/code/extractor/
          dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release --include-symbols --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
      
      - name: publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: nugetpackage
          path: ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
